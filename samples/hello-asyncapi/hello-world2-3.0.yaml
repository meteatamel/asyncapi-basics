# Slightly more complicated AsyncAPI with servers, channels, components,
# and schemas
asyncapi: 3.0.0
info:
  title: Hello world application
  version: 0.1.0
# You can have multiple servers for production, staging, test, etc.
servers:
  production:
    host: broker.mycompany.com
    protocol: amqp
    description: This is "My Company" broker.
# Each channel is part of a server. If a channel does not specify a server,
# it's available on all servers.
channels:
  hello:
    address: hello
    messages:
      publish.message:
        # Message schema can be referenced
        $ref: '#/components/messages/hello-msg'
  goodbye:
    address: goodbye
    messages:
      publish.message:
        $ref: '#/components/messages/goodbye-msg'
operations:
  hello.publish:
    action: receive
    channel:
      $ref: '#/channels/hello'
    messages:
      - $ref: '#/channels/hello/messages/publish.message'
  goodbye.publish:
    action: receive
    channel:
      $ref: '#/channels/goodbye'
    messages:
      - $ref: '#/channels/goodbye/messages/publish.message'
components:
  messages:
    hello-msg:
      payload:
        type: object
        properties:
          name:
            type: string
          sentAt:
            $ref: '#/components/schemas/sent-at'
    goodbye-msg:
      payload:
        type: object
        properties:
          sentAt:
            $ref: '#/components/schemas/sent-at'
  schemas:
    sent-at:
      type: string
      description: The date and time a message was sent.
      format: datetime